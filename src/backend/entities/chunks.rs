//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "chunks")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub upload_id: String,
    pub chunk_number: i32,
    pub chunk_size: i64,
    pub chunk_hash: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::uploads::Entity",
        from = "Column::UploadId",
        to = "super::uploads::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Uploads,
}

impl Related<super::uploads::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Uploads.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
